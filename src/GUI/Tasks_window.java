/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import sk.stu.fiit.Loader;
import sk.stu.fiit.TaskState;
import sk.stu.fiit.Tasks.Task;

/**
 * Trieda, ktora spracuva presuvanie Taskov.
 * @author adamh
 */
public class Tasks_window extends javax.swing.JFrame {
    private ArrayList<Task> array_todo = new ArrayList<>();
    private ArrayList<Task> array_doing = new ArrayList<>();
    private ArrayList<Task> array_done = new ArrayList<>();
    /**
     * Creates new form Tasks_window
     */
    public Tasks_window() {
        initComponents();
        if (Loader.getCurrentlyLogged().getUserTasks() == null){
            JOptionPane.showMessageDialog(rootPane, java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("THIS USER HAS NO TASKS!"), java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("NO TASKS"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        divide_arrays();
        fill_table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jTable1.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TODO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(255, 153, 204));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DOING"
            }
        ));
        jScrollPane5.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(255, 102, 102));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DONE"
            }
        ));
        jScrollPane6.setViewportView(jTable3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel3, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jButton1.setText("Move to DONE");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton1.setMaximumSize(new java.awt.Dimension(200, 40));
        jButton1.setMinimumSize(new java.awt.Dimension(200, 40));
        jButton1.setPreferredSize(new java.awt.Dimension(200, 40));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton1MouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jButton2.setText("Move to DOING");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton2.setMaximumSize(new java.awt.Dimension(999999999, 999999999));
        jButton2.setMinimumSize(new java.awt.Dimension(200, 40));
        jButton2.setPreferredSize(new java.awt.Dimension(200, 40));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton2MouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jButton2, gridBagConstraints);

        jButton3.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jButton3.setText("Move to DOING");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton3.setMaximumSize(new java.awt.Dimension(200, 40));
        jButton3.setMinimumSize(new java.awt.Dimension(200, 40));
        jButton3.setPreferredSize(new java.awt.Dimension(200, 40));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton3MouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jButton4.setText("Move to TODO");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton4.setMaximumSize(new java.awt.Dimension(200, 40));
        jButton4.setMinimumSize(new java.awt.Dimension(200, 40));
        jButton4.setPreferredSize(new java.awt.Dimension(200, 40));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton4MouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(jButton4, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle"); // NOI18N
        jLabel1.setText(bundle.getString("TODO")); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(150, 40));
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabel2.setText(bundle.getString("DOING")); // NOI18N
        jLabel2.setMaximumSize(new java.awt.Dimension(150, 40));
        jLabel2.setPreferredSize(new java.awt.Dimension(150, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabel3.setText(bundle.getString("DONE")); // NOI18N
        jLabel3.setMaximumSize(new java.awt.Dimension(150, 40));
        jLabel3.setPreferredSize(new java.awt.Dimension(150, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        getContentPane().add(jLabel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseReleased
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(rootPane, java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("YOU HAVE TO CHOOSE TASK!"), java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("WRONG INPUT"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        Task task = array_todo.get(jTable1.getSelectedRow());
        task.setTaskState(TaskState.DOING);
        
        clear_tables();
        
        array_doing.add(task);
        array_todo.remove(task);
        fill_table();
        updateTaskChart();
        Loader.save();
    }//GEN-LAST:event_jButton2MouseReleased

    private void jButton4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseReleased
        // TODO add your handling code here:
        if (jTable2.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(rootPane, java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("YOU HAVE TO CHOOSE TASK!"), java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("WRONG INPUT"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        Task task = array_doing.get(jTable2.getSelectedRow());
        task.setTaskState(TaskState.TODO);
        
        clear_tables();
        
        array_todo.add(task);
        array_doing.remove(task);
        fill_table();
        updateTaskChart();
        Loader.save();
    }//GEN-LAST:event_jButton4MouseReleased

    private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased
        // TODO add your handling code here:
        if (jTable2.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(rootPane, java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("YOU HAVE TO CHOOSE TASK!"), java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("WRONG INPUT"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        Task task = array_doing.get(jTable2.getSelectedRow());
        task.setTaskState(TaskState.DONE);
        
        clear_tables();
        
        array_done.add(task);
        array_doing.remove(task);
        fill_table();
        updateTaskChart();
        Loader.save();
    }//GEN-LAST:event_jButton1MouseReleased

    private void jButton3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseReleased
        // TODO add your handling code here:
        if (jTable3.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(rootPane, java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("YOU HAVE TO CHOOSE TASK!"), java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("WRONG INPUT"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        Task task = array_done.get(jTable3.getSelectedRow());
        task.setTaskState(TaskState.DOING);
        
        clear_tables();
        
        array_doing.add(task);
        array_done.remove(task);
        fill_table();
        updateTaskChart();
        Loader.save();
    }//GEN-LAST:event_jButton3MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (java.util.ResourceBundle.getBundle("sk/stu/fiit/bundle").getString("NIMBUS").equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tasks_window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tasks_window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tasks_window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tasks_window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tasks_window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables

    /**
     * Metoda na vypln vsetkych troch tabuliek s datami.
     */
    private void fill_table(){
        jTable1.setShowGrid(true);
        jTable1.setRowHeight(300);
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        for (int i = 0; i < array_todo.size(); i++) {
            model.addRow(new Object[]{i});
        }
        jTable1.setDefaultRenderer(jTable1.getColumnClass(0), new RssFeedCellRenderer(array_todo));
        
        jTable2.setShowGrid(true);
        jTable2.setRowHeight(300);
        
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        
        for (int i = 0; i < array_doing.size(); i++) {
            model2.addRow(new Object[]{i});
        }
        
        jTable2.setDefaultRenderer(jTable2.getColumnClass(0), new RssFeedCellRenderer(array_doing));
        
        jTable3.setShowGrid(true);
        jTable3.setRowHeight(300);
        
        DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
        
        for (int i = 0; i < array_done.size(); i++) {
            model3.addRow(new Object[]{i});
        }
        
        jTable3.setDefaultRenderer(jTable3.getColumnClass(0), new RssFeedCellRenderer(array_done));
    }
    
    /**
     * Metoda na "vycistenie" tabuliek.
     */
    private void clear_tables(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        
        for (int i = model2.getRowCount() - 1; i >= 0; i--) {
            model2.removeRow(i);
        }
        
        DefaultTableModel model3= (DefaultTableModel) jTable3.getModel();
        
        for (int i = model3.getRowCount() - 1; i >= 0; i--) {
            model3.removeRow(i);
        }
    }
    
    /**
     * Metoda na rozdelenie pola na tri rozne polia.
     */
    private void divide_arrays(){
        for (Task task : Loader.getCurrentlyLogged().getUserTasks()) {
            switch (task.getTaskState()) {
                case TODO:
                    array_todo.add(task);
                    break;
                case DOING:
                    array_doing.add(task);
                    break;
                default:
                    array_done.add(task);
                    break;
            }
        }
    }
    
    /**
     * Metoda na update grafu v hlavnom okne.
     */
    private void updateTaskChart(){
        UserTaskChart chartInstance =  UserTaskChart.getCurrentInstance();
        if(chartInstance != null){
            if(Loader.getCurrentlyLogged() != null && Main_Window.getInstance() != null){
                chartInstance.updateChartInstance(Loader.getCurrentlyLogged());
                Main_Window.getInstance().showGraph();
            }
        }
    }
}

class RssFeedCellRenderer implements TableCellRenderer{
    private ArrayList<Task> array_tasks = new ArrayList<>();

    public RssFeedCellRenderer(ArrayList<Task> array_tasks) {
        this.array_tasks = array_tasks;
    }
    
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        Task_show task_show = new Task_show(array_tasks.get((Integer)value));
        JPanel jPanel = task_show.get_panel();
        if (isSelected) {
            table.setForeground(table.getSelectionForeground());
            table.setBackground(table.getSelectionBackground());
            jPanel.setForeground(Color.red);
            jPanel.setBackground(Color.BLUE);
        
        } else {
          table.setForeground(table.getForeground());
          table.setBackground(table.getBackground());
          jPanel.setForeground(table.getForeground());
          jPanel.setBackground(new Color(204,204,255));
        }
        
       return jPanel;
    }
    
   
}